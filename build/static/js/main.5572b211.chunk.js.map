{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["deck","textOne","textTwo","Wrapper","styled","height","justifyContent","alignItems","display","width","position","Card","isVisible","background","overflow","cursor","Title","textAlign","fontSize","color","fontFamily","maxWidth","initialCard","Math","floor","random","length","App","useState","isFlipped","setIsFlipped","showTitle","setShowTitle","card","setCard","useSpring","opacity","transform","config","mass","tension","friction","onFrame","animatiom","toFixed","useEffect","newCard","toggleisFlipped","div","className","style","interpolate","o","onClick","t","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAIMA,EAAO,CACX,CAACC,QAAS,WAAYC,QAAS,UAC/B,CAACD,QAAS,YAAaC,QAAS,YAChC,CAACD,QAAS,cAAeC,QAAS,YAClC,CAACD,QAAS,WAAYC,QAAS,8BAC/B,CAACD,QAAS,WAAYC,QAAS,eAC/B,CAACD,QAAS,WAAYC,QAAS,aAC/B,CAACD,QAAS,YAAaC,QAAS,cAChC,CAACD,QAAS,cAAeC,QAAS,8BAClC,CAACD,QAAS,cAAYC,QAAS,eAC/B,CAACD,QAAS,UAAWC,QAAS,qBAC9B,CAACD,QAAS,UAAWC,QAAS,aAG1BC,EAAUC,YAAO,MAAPA,CAAc,CAC5BC,OAAQ,QACRC,eAAgB,SAChBC,WAAY,SACZC,QAAS,OACTC,MAAO,OACPC,SAAU,aAGNC,EAAOP,YAAO,MAAPA,EAAoC,kBAAkB,CACjEI,QAD+C,EAAEI,UAC5B,OAAS,OAC9BN,eAAgB,SAChBC,WAAY,SACZF,OAAQ,IACRI,MAAO,IACPI,WAAY,UACZC,SAAU,SACV,UAAW,CACTC,OAAQ,eAINC,EAAQZ,YAAO,KAAPA,EAAmC,kBAAkB,CACjEI,QAD+C,EAAEI,UAC5B,OAAS,OAC9BK,UAAW,SACXC,SAAU,GACVC,MAAO,QACPC,WACE,oJACFC,SAAU,QAGNC,EAActB,EAAKuB,KAAKC,MAAMD,KAAKE,SAAWzB,EAAK0B,SA8D1CC,MAvDf,WAAgB,IAAD,EACqBC,oBAAS,GAD9B,mBACNC,EADM,KACKC,EADL,OAEqBF,oBAAS,GAF9B,mBAENG,EAFM,KAEKC,EAFL,OAGWJ,mBAASN,GAHpB,mBAGNW,EAHM,KAGAC,EAHA,OAIgBC,YAAU,CACrCC,QAASP,EAAY,EAAI,EACzBQ,UAAU,8BAAD,OAAgCR,EAAY,IAAM,EAAlD,QACTS,OAAQ,CAACC,KAAM,EAAGC,QAAS,IAAKC,SAAU,IAC1CC,QAAS,SAACC,GAC6B,QAAjCA,EAAUP,QAAQQ,QAAQ,IAC5BZ,GAAa,MANZK,EAJM,EAINA,UAAWD,EAJL,EAIKA,QAWlBS,qBAAU,WACR,IAAKhB,EAAW,CACd,IAAMiB,EAAU9C,EAAKuB,KAAKC,MAAMD,KAAKE,SAAWzB,EAAK0B,SACrDQ,EAAQY,MAET,CAACjB,IAEJ,IAAMkB,EAAkB,WACtBf,GAAa,GACbF,GAAcD,IAGhB,OACE,eAAC1B,EAAD,WACE,cAAC,IAAE6C,IAAH,CACEC,UAAU,IACVC,MAAO,CACLd,QAASA,EAAQe,aAAY,SAACC,GAAD,OAAa,EAAIA,KAC9Cf,aAJJ,SAOE,cAAC1B,EAAD,CAAM0C,QAASN,EAAiBnC,WAAYiB,EAA5C,SACE,cAACb,EAAD,CAAOJ,UAAWmB,EAAlB,SAA8BE,EAAKhC,cAGvC,cAAC,IAAE+C,IAAH,CACEC,UAAU,IACVC,MAAO,CACLd,UACAC,UAAWA,EAAUc,aAAY,SAACG,GAAD,gBAAUA,EAAV,wBAJrC,SAOE,cAAC3C,EAAD,CAAM0C,QAASN,EAAiBnC,UAAWiB,EAA3C,SACE,cAACb,EAAD,CAAOJ,UAAWmB,EAAlB,SAA8BE,EAAK/B,kBC3F9BqD,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5572b211.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {useSpring, animated as a} from 'react-spring'\nimport styled from '@emotion/styled'\n\nconst deck = [\n  {textOne: 'una gota', textTwo: 'a drop'},\n  {textOne: 'un chorro', textTwo: 'a stream'},\n  {textOne: 'un percance', textTwo: 'a mishap'},\n  {textOne: 'destacar', textTwo: 'to emphasize, to stand out'},\n  {textOne: 'contraer', textTwo: 'to contract'},\n  {textOne: 'reanudar', textTwo: 'to resume'},\n  {textOne: 'el afiche', textTwo: 'the poster'},\n  {textOne: 'el chubasco', textTwo: 'the heavy shower (weather)'},\n  {textOne: 'el tel√≥n', textTwo: 'the curtain'},\n  {textOne: 'atrapar', textTwo: 'to catch, capture'},\n  {textOne: 'manchar', textTwo: 'to stain'}\n]\n\nconst Wrapper = styled('div')({\n  height: '100vh',\n  justifyContent: 'center',\n  alignItems: 'center',\n  display: 'flex',\n  width: '100%',\n  position: 'relative'\n})\n\nconst Card = styled('div')<{isVisible: boolean}>(({isVisible}) => ({\n  display: isVisible ? 'flex' : 'none',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: 480,\n  width: 600,\n  background: '#0E2539',\n  overflow: 'scroll',\n  '&:hover': {\n    cursor: 'pointer'\n  }\n}))\n\nconst Title = styled('h1')<{isVisible: boolean}>(({isVisible}) => ({\n  display: isVisible ? 'flex' : 'none',\n  textAlign: 'center',\n  fontSize: 32,\n  color: '#FFFF',\n  fontFamily:\n    \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\n  maxWidth: 240\n}))\n\nconst initialCard = deck[Math.floor(Math.random() * deck.length)]\n\ninterface Animation {\n  opacity: number\n  transition: string\n}\n\nfunction App() {\n  const [isFlipped, setIsFlipped] = useState(false)\n  const [showTitle, setShowTitle] = useState(true)\n  const [card, setCard] = useState(initialCard)\n  const {transform, opacity} = useSpring({\n    opacity: isFlipped ? 1 : 0,\n    transform: `perspective(600px) rotateX(${isFlipped ? 180 : 0}deg)`,\n    config: {mass: 5, tension: 500, friction: 80},\n    onFrame: (animatiom: Animation) => {\n      if (animatiom.opacity.toFixed(1) === '0.5') {\n        setShowTitle(true)\n      }\n    }\n  })\n\n  useEffect(() => {\n    if (!isFlipped) {\n      const newCard = deck[Math.floor(Math.random() * deck.length)]\n      setCard(newCard)\n    }\n  }, [isFlipped])\n\n  const toggleisFlipped = () => {\n    setShowTitle(false)\n    setIsFlipped(!isFlipped)\n  }\n\n  return (\n    <Wrapper>\n      <a.div\n        className=\"c\"\n        style={{\n          opacity: opacity.interpolate((o: any) => (1 - o) as any),\n          transform\n        }}\n      >\n        <Card onClick={toggleisFlipped} isVisible={!isFlipped}>\n          <Title isVisible={showTitle}>{card.textOne}</Title>\n        </Card>\n      </a.div>\n      <a.div\n        className=\"c\"\n        style={{\n          opacity,\n          transform: transform.interpolate((t) => `${t} rotateX(180deg)`)\n        }}\n      >\n        <Card onClick={toggleisFlipped} isVisible={isFlipped}>\n          <Title isVisible={showTitle}>{card.textTwo}</Title>\n        </Card>\n      </a.div>\n    </Wrapper>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport './styles.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}